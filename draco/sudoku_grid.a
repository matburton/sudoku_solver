
        xdef    getSquarePointer
        xdef    cloneIntoGrid
        xdef    squareHasPossibility
        xdef    getPossibilityCount
        xdef    getSquareValue
        xdef    isPossible
        xdef    isComplete

getSquareOffset macro
        moveq   #0,d0
        move.w  (sp)+,d0
        move.w  (sp)+,d1
        move.l  (sp)+,a1
        mulu    2(a1),d0
        add.w   d1,d0
        mulu    14(a1),d0
        add.w   #\1+20,d0
        endm

getSquarePointer
        move.l  (sp)+,a0
        getSquareOffset 0
        add.l   a1,d0
        jmp     (a0)
        
cloneIntoGrid
        movem.l (sp)+,d0/a0/a1
        move.w  12(a1),d1
        lsr.w   #1,d1
        dbt     d1,cigexit
cigloop move.w  (a1)+,(a0)+
        dbf     d1,cigloop
cigexit move.l  d0,a0
        jmp     (a0)
        
squareHasPossibility
        move.l  (sp)+,a0
        move.w  (sp)+,d1
        swap    d1
        getSquareOffset 2
        add.l   d0,a1
        move.w  #0,d1
        swap    d1
        subq.w  #1,d1
        move.l  d1,d0
        lsr.w   #4,d1
        lsl.w   #1,d1
        add.l   d1,a1
        and.w   #16-1,d0
        move.w  (a1),d1
        btst.l  d0,d1
        sne     d0
        jmp     (a0)

getSquareCachedValue macro
        move.l  (sp)+,a0
        getSquareOffset \1
        add.l   d0,a1
        moveq   #0,d0
        move.b  (a1),d0
        jmp     (a0)
        endm

getPossibilityCount
        getSquareCachedValue 0

getSquareValue
        getSquareCachedValue 1

isGridCachedValueZero macro
        movem.l (sp)+,a0/a1
        tst.w   \1+12(a1)
        seq     d0
        jmp     (a0)
        endm

isPossible
        isGridCachedValueZero 4
        
isComplete
        isGridCachedValueZero 6

end