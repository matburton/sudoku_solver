
class Solver {

    function void removePossibilitiesRelatedTo(Array grid, int value, int x, int y) {
    
        return; // TODO
    }
    
    function void removePossibilityAt(Array grid, int value, int x, int y) {
    
        return; // TODO
    }
    
    function void setValueAt(Array grid, int value, int x, int y) {
    
        return; // TODO
    }
    
    // Returns zero if no value could be deduced
    //
    function int getDeducedValueAt(Array grid, int x, int y) {
    
        return 0; // TODO
    }
    
    function void refineGrid(Array grid) {
    
        return; // TODO
    }
    
    function int getAPossibilityAt(Array grid, int x, int y) {
    
        return 0; // TODO
    }
    
    // TODO: Grid stack-y stuff, but we're going to use the actual stack:
    //
    // function void splitGrid(Array grid) { return; }
}